@page "/workspace/CategoryList"
@using System.Text.Json
@using Domain
@using Domain.DataTypes
@inject MemoryDatabase MemoryDatabase
@inject ToastService ToastService
@inject NavigationManager NavigationManager

@if (MemoryDatabase.isLoggedIn)
{
    <PageTitle>Lista de categorías</PageTitle>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="/workspace">
            <span class="oi oi-chevron-left" aria-hidden="true"></span> Volver
        </NavLink>
    </div>
    @if (categoryList.Any())
    {
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h3>Categorías</h3>
                <button class="btn btn-primary" @onclick="() => ShowAddCategoryModal()">Agregar una categoría</button>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Fecha</th>
                        <th>Nombre</th>
                        <th>Tipo</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in categoryList)
                    {
                        <tr>
                            <td>@category.CreationDate.ToShortDateString()</td>
                            <td>@category.Name</td>
                            <td>@category.Type</td>
                            <td>@category.Status</td>

                            <td>
                                <button class="btn btn-primary" @onclick="() => ShowEditCategoryeModal(category)">Editar</button>
                                <button class="btn btn-danger" @onclick="() => DeleteCategory(category)">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    }
    else
    {
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h3>Lista de categorías</h3>
                <button class="btn btn-primary" @onclick="() => ShowAddCategoryModal()">Agregar una Categoría</button>
            </div>
            <p>No hay categorías registradas</p>
        </div>
    }
    @if (showAddCategoryModal)
    {
        <div class="modal fade show" style="display: block; background: rgba(0, 0, 0, 0.5);" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Agregar una Categoría</h5>
                        <button type="button" class="close" aria-label="Close" @onclick="() => HideAddCategoryModal()">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="creationDate">Fecha de Creación</label>
                            <input type="date" class="form-control" id="creationDate" @bind="initialDate" max="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        </div>
                        <div class="form-group">
                            <label for="categoryName">Nombre de la categoría</label>
                            <input type="text" class="form-control" id="categoryName" @bind="categoryName" />
                        </div>
                        <div class="form-group">
                            <label for="categoryType">Tipo</label>
                            <select class="form-control" id="categoryType" @bind="categoryType">
                                <option value="" disabled selected>Seleccionar</option>
                                @foreach (var value in Enum.GetValues(typeof(CategoryType)))
                                {
                                    <option value="@value">@value</option>
                                }
                            </select>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="() => HideAddCategoryModal()">Cancelar</button>
                            <button type="button" class="btn btn-primary" @onclick="AddCategory">Guardar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    @if (showEditCategoryModal)
    {
        <div class="modal fade show" style="display: block; background: rgba(0, 0, 0, 0.5);" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Agregar una Categoría</h5>
                        <button type="button" class="close" aria-label="Close" @onclick="() => HideAddCategoryModal()">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="categoryName">Nombre de la categoría</label>
                            <input type="text" class="form-control" id="categoryName" @bind="newCategoryName" />
                        </div>
                        <div class="form-group">
                            <label for="categoryType">Tipo</label>
                            <select class="form-control" id="categoryType" @bind="newCategoryType">
                                <option value="" disabled selected>Seleccionar</option>
                                <option value="Income">Ingreso</option>
                                <option value="Cost">Costo</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="categoryStatus">Tipo</label>
                            <select class="form-control" id="categoryStatus" @bind="newCategoryStatus">
                                <option value="" disabled selected>Seleccionar</option>
                                <option value="Active">Activa</option>
                                <option value="Inactive">Inactiva</option>
                            </select>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="() => HideEditCategoryModal()">Cancelar</button>
                            <button type="button" class="btn btn-primary" @onclick="() => SaveCategoryValue()">Guardar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }



    @code {
    private User CurrentUser;
    private Domain.Workspace workspace;
    private CategoryService _categoryService;
    private List<Category> categoryList;
    private bool showAddCategoryModal = false;
    private Category newCategory;
    private Category selectedCategory;
    private Category updatedCategory;

    private DateTime initialDate = DateTime.Today;
    private string categoryName;
    private CategoryType categoryType;
    private CategoryStatus categoryStatus;

    private bool showEditCategoryModal = false;
    private string newCategoryName;
    private CategoryType newCategoryType;
    private CategoryStatus newCategoryStatus;


    private void HideEditCategoryModal()
    {
        showEditCategoryModal = false;
    }
    private void ShowEditCategoryeModal(Category category)
    {
        selectedCategory = category;
        showEditCategoryModal = true;
    }

    private void SaveCategoryValue()
    {
        updatedCategory = new Category { Name = newCategoryName, CreationDate = selectedCategory.CreationDate, Status = newCategoryStatus, Type = newCategoryType };
        try
        {
            _categoryService.Update(workspace, selectedCategory.Name, updatedCategory);
            categoryList = workspace.CategoryList;
            ToastService.Notify(new(ToastType.Success, "Categoría modificada con exito!"));
        }
        catch (Exception e)
        {
            ToastService.Notify(new(ToastType.Danger, $"Error: {e.Message}."));
        }
        HideEditCategoryModal();
        NavigationManager.NavigateTo("/workspace/CategoryList");

    }

    private void ShowAddCategoryModal()
    {
        showAddCategoryModal = true;
    }

    private void HideAddCategoryModal()
    {
        showAddCategoryModal = false;
    }

    protected override void OnInitialized()
    {
        if (MemoryDatabase.isLoggedIn)
        {
            CurrentUser = MemoryDatabase.currentUser;
            workspace = MemoryDatabase.currentWorkspace;
            categoryList = workspace.CategoryList;
            _categoryService = new CategoryService(MemoryDatabase);
            newCategory = new Category();
        }

    }

    private void AddCategory()
    {
        try
        {
            Category newCategory = new Category { CreationDate = initialDate, Name = categoryName, Type = categoryType, Status = categoryStatus };
            _categoryService.Add(workspace, newCategory);
            categoryList = workspace.CategoryList;
            ToastService.Notify(new(ToastType.Success, "Categoría agregada con exito!"));
        }
        catch (Exception e)
        {
            ToastService.Notify(new(ToastType.Danger, $"Error: {e.Message}."));
        }
        HideAddCategoryModal();
        NavigationManager.NavigateTo("/workspace/CategoryList");
    }

    private void DeleteCategory(Category category)
    {
        try
        {
            _categoryService.Delete(workspace, category);
            categoryList = workspace.CategoryList;
            ToastService.Notify(new(ToastType.Success, "Categoría eliminada con exito!"));
        }
        catch (Exception e)
        {
            ToastService.Notify(new(ToastType.Danger, $"Error: {e.Message}."));
        }
        HideEditCategoryModal();
        NavigationManager.NavigateTo("/workspace/CategoryList");
    }
}
}
else
{
    NavigationManager.NavigateTo("/login");
}
